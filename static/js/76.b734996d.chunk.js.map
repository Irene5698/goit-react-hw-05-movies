{"version":3,"file":"static/js/76.b734996d.chunk.js","mappings":"8SAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,cACzBG,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CO,IAD1C,cACtBJ,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,sDAKdG,EAAU,mCAAG,WAAMC,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVM,EAAO,mCAAG,WAAMD,GAAN,uFACER,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD,0GCzBvB,EAA2B,uBAA3B,EAA8D,wB,SCwC9D,EAnCa,WACX,OAAkCQ,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAMR,IAJAQ,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAQD,GAASS,KAAKH,EACvB,GAAE,CAACN,IAECK,EAIL,OACE,+BACE,wBACGA,EAAUK,KAAI,SAAAC,GAAK,OAClB,gBAAmBC,UAAWC,EAA9B,WACE,gBACED,UAAWC,EACXC,IACEH,EAAMI,aAAN,8CAC2CJ,EAAMI,cADjD,+EAIFC,IAAKL,EAAMM,iBAEb,wBAAKN,EAAMb,QACX,gCAAQa,EAAMO,eAXPP,EAAMQ,GADG,OAkB3B,C","sources":["api.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'e62aa03ea01a4734fb4ccae0088b942f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getSearchMovie = async name => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${name}`);\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ActorImg\":\"Cast_ActorImg__B5Hd5\",\"ActorList\":\"Cast_ActorList__h0bgO\"};","import { getCast } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from '../Cast/Cast.module.css';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId).then(setMovieCast);\n  }, [movieId]);\n\n  if (!movieCast) {\n    return;\n  }\n\n  return (\n    <>\n      <ul>\n        {movieCast.map(actor => (\n          <li key={actor.id} className={css.ActorList}>\n            <img\n              className={css.ActorImg}\n              src={\n                actor.profile_path\n                  ? `https://www.themoviedb.org/t/p/w500/${actor.profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n              }\n              alt={actor.original_name}\n            />\n            <h3>{actor.name}</h3>\n            <p>As: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  movieCast: PropTypes.array,\n  movieId: PropTypes.string,\n};\n"],"names":["KEY","axios","getTrandingMovies","response","data","results","getSearchMovie","name","getDetails","movieId","getCast","cast","getReviews","useState","movieCast","setMovieCast","useParams","useEffect","then","map","actor","className","css","src","profile_path","alt","original_name","character","id"],"sourceRoot":""}